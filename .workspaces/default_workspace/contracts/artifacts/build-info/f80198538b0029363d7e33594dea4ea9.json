{
	"id": "f80198538b0029363d7e33594dea4ea9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20Standard.sol": {
				"content": "pragma solidity ^0.5.7;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        \r\n\treturn c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract ERC20Standard {\r\n\tusing SafeMath for uint256;\r\n\tuint public totalSupply;\r\n\t\r\n\tstring public name;\r\n\tuint8 public decimals;\r\n\tstring public symbol;\r\n\tstring public version;\r\n\t\r\n\tmapping (address => uint256) balances;\r\n\tmapping (address => mapping (address => uint)) allowed;\r\n\r\n\t//Fix for short address attack against ERC20\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\tassert(msg.data.length == size + 4);\r\n\t\t_;\r\n\t} \r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\tfunction transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\r\n\t    require(balances[msg.sender] >= _value && _value > 0);\r\n\t    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t    balances[_recipient] = balances[_recipient].add(_value);\r\n\t    emit Transfer(msg.sender, _recipient, _value);        \r\n        }\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value) public {\r\n\t    require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0);\r\n            balances[_to] = balances[_to].add(_value);\r\n            balances[_from] = balances[_from].sub(_value);\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n            emit Transfer(_from, _to, _value);\r\n        }\r\n\r\n\tfunction  approve(address _spender, uint _value) public {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t}\r\n\r\n\tfunction allowance(address _spender, address _owner) public view returns (uint balance) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\t//Event which is triggered to log all transfers to this contract's event log\r\n\tevent Transfer(\r\n\t\taddress indexed _from,\r\n\t\taddress indexed _to,\r\n\t\tuint _value\r\n\t\t);\r\n\t\t\r\n\t//Event which is triggered whenever an owner approves a new allowance for a spender.\r\n\tevent Approval(\r\n\t\taddress indexed _owner,\r\n\t\taddress indexed _spender,\r\n\t\tuint _value\r\n\t\t);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20Standard.sol": {
				"ERC20Standard": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20Standard.sol\":879:2834  contract ERC20Standard {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ERC20Standard.sol\":879:2834  contract ERC20Standard {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20Standard.sol\":879:2834  contract ERC20Standard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/ERC20Standard.sol\":879:2834  contract ERC20Standard {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x54fd4d50\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20Standard.sol\":966:984  string public name */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_16:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_16)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC20Standard.sol\":966:984  string public name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_19:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Standard.sol\":2188:2340  function  approve(address _spender, uint _value) public {\r... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"contracts/ERC20Standard.sol\":2188:2340  function  approve(address _spender, uint _value) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/ERC20Standard.sol\":936:959  uint public totalSupply */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Standard.sol\":1759:2183  function transferFrom(address _from, address _to, uint _value) public {\r... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/ERC20Standard.sol\":1759:2183  function transferFrom(address _from, address _to, uint _value) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/ERC20Standard.sol\":988:1009  uint8 public decimals */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Standard.sol\":1037:1058  string public version */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_32:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_32)\n    tag_34:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC20Standard.sol\":1037:1058  string public version */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_35\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_35:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Standard.sol\":1306:1409  function balanceOf(address _owner) public view returns (uint balance) {\r... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"contracts/ERC20Standard.sol\":1306:1409  function balanceOf(address _owner) public view returns (uint balance) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Standard.sol\":1013:1033  string public symbol */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_41:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_41)\n    tag_43:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC20Standard.sol\":1013:1033  string public symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Standard.sol\":1414:1754  function transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\r... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n        /* \"contracts/ERC20Standard.sol\":1414:1754  function transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/ERC20Standard.sol\":2345:2475  function allowance(address _spender, address _owner) public view returns (uint balance) {\r... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_49:\n        /* \"contracts/ERC20Standard.sol\":2345:2475  function allowance(address _spender, address _owner) public view returns (uint balance) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Standard.sol\":966:984  string public name */\n    tag_15:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_52\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_51)\n    tag_52:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_53:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_53\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":2188:2340  function  approve(address _spender, uint _value) public {\r... */\n    tag_22:\n        /* \"contracts/ERC20Standard.sol\":2281:2287  _value */\n      dup1\n        /* \"contracts/ERC20Standard.sol\":2249:2256  allowed */\n      0x06\n        /* \"contracts/ERC20Standard.sol\":2249:2268  allowed[msg.sender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2257:2267  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":2249:2268  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":2249:2278  allowed[msg.sender][_spender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2269:2277  _spender */\n      dup5\n        /* \"contracts/ERC20Standard.sol\":2249:2278  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":2249:2287  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Standard.sol\":2318:2326  _spender */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":2297:2335  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20Standard.sol\":2306:2316  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":2297:2335  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20Standard.sol\":2328:2334  _value */\n      dup4\n        /* \"contracts/ERC20Standard.sol\":2297:2335  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20Standard.sol\":2188:2340  function  approve(address _spender, uint _value) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":936:959  uint public totalSupply */\n    tag_24:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":1759:2183  function transferFrom(address _from, address _to, uint _value) public {\r... */\n    tag_27:\n        /* \"contracts/ERC20Standard.sol\":1864:1870  _value */\n      dup1\n        /* \"contracts/ERC20Standard.sol\":1845:1853  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1845:1860  balances[_from] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1854:1859  _from */\n      dup6\n        /* \"contracts/ERC20Standard.sol\":1845:1860  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":1845:1870  balances[_from] >= _value */\n      lt\n      iszero\n        /* \"contracts/ERC20Standard.sol\":1845:1910  balances[_from] >= _value && allowed[_from][msg.sender] >= _value */\n      dup1\n      iszero\n      tag_56\n      jumpi\n      pop\n        /* \"contracts/ERC20Standard.sol\":1904:1910  _value */\n      dup1\n        /* \"contracts/ERC20Standard.sol\":1874:1881  allowed */\n      0x06\n        /* \"contracts/ERC20Standard.sol\":1874:1888  allowed[_from] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1882:1887  _from */\n      dup6\n        /* \"contracts/ERC20Standard.sol\":1874:1888  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":1874:1900  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1889:1899  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":1874:1900  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":1874:1910  allowed[_from][msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/ERC20Standard.sol\":1845:1910  balances[_from] >= _value && allowed[_from][msg.sender] >= _value */\n    tag_56:\n        /* \"contracts/ERC20Standard.sol\":1845:1924  balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0 */\n      dup1\n      iszero\n      tag_57\n      jumpi\n      pop\n        /* \"contracts/ERC20Standard.sol\":1923:1924  0 */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1914:1920  _value */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":1914:1924  _value > 0 */\n      gt\n        /* \"contracts/ERC20Standard.sol\":1845:1924  balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0 */\n    tag_57:\n        /* \"contracts/ERC20Standard.sol\":1837:1925  require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"contracts/ERC20Standard.sol\":1956:1981  balances[_to].add(_value) */\n      tag_59\n        /* \"contracts/ERC20Standard.sol\":1974:1980  _value */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":1956:1964  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1956:1969  balances[_to] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1965:1968  _to */\n      dup6\n        /* \"contracts/ERC20Standard.sol\":1956:1969  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":1956:1973  balances[_to].add */\n      tag_60\n      swap1\n        /* \"contracts/ERC20Standard.sol\":1956:1981  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"contracts/ERC20Standard.sol\":1940:1948  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1940:1953  balances[_to] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1949:1952  _to */\n      dup5\n        /* \"contracts/ERC20Standard.sol\":1940:1953  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":1940:1981  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Standard.sol\":2014:2041  balances[_from].sub(_value) */\n      tag_61\n        /* \"contracts/ERC20Standard.sol\":2034:2040  _value */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":2014:2022  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":2014:2029  balances[_from] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2023:2028  _from */\n      dup7\n        /* \"contracts/ERC20Standard.sol\":2014:2029  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":2014:2033  balances[_from].sub */\n      tag_62\n      swap1\n        /* \"contracts/ERC20Standard.sol\":2014:2041  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"contracts/ERC20Standard.sol\":1996:2004  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1996:2011  balances[_from] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2005:2010  _from */\n      dup6\n        /* \"contracts/ERC20Standard.sol\":1996:2011  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":1996:2041  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Standard.sol\":2085:2123  allowed[_from][msg.sender].sub(_value) */\n      tag_63\n        /* \"contracts/ERC20Standard.sol\":2116:2122  _value */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":2085:2092  allowed */\n      0x06\n        /* \"contracts/ERC20Standard.sol\":2085:2099  allowed[_from] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2093:2098  _from */\n      dup7\n        /* \"contracts/ERC20Standard.sol\":2085:2099  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":2085:2111  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2100:2110  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":2085:2111  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":2085:2115  allowed[_from][msg.sender].sub */\n      tag_62\n      swap1\n        /* \"contracts/ERC20Standard.sol\":2085:2123  allowed[_from][msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"contracts/ERC20Standard.sol\":2056:2063  allowed */\n      0x06\n        /* \"contracts/ERC20Standard.sol\":2056:2070  allowed[_from] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2064:2069  _from */\n      dup6\n        /* \"contracts/ERC20Standard.sol\":2056:2070  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":2056:2082  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2071:2081  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":2056:2082  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":2056:2123  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Standard.sol\":2159:2162  _to */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":2143:2171  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20Standard.sol\":2152:2157  _from */\n      dup4\n        /* \"contracts/ERC20Standard.sol\":2143:2171  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20Standard.sol\":2164:2170  _value */\n      dup4\n        /* \"contracts/ERC20Standard.sol\":2143:2171  Transfer(_from, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20Standard.sol\":1759:2183  function transferFrom(address _from, address _to, uint _value) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":988:1009  uint8 public decimals */\n    tag_29:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":1037:1058  string public version */\n    tag_31:\n      0x04\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_65\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_64)\n    tag_65:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_66:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":1306:1409  function balanceOf(address _owner) public view returns (uint balance) {\r... */\n    tag_38:\n        /* \"contracts/ERC20Standard.sol\":1362:1374  uint balance */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1388:1396  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1388:1404  balances[_owner] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1397:1403  _owner */\n      dup4\n        /* \"contracts/ERC20Standard.sol\":1388:1404  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":1381:1404  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/ERC20Standard.sol\":1306:1409  function balanceOf(address _owner) public view returns (uint balance) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":1013:1033  string public symbol */\n    tag_40:\n      0x03\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_68\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_69\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_68)\n    tag_69:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_70:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_70\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":1414:1754  function transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\r... */\n    tag_47:\n        /* \"contracts/ERC20Standard.sol\":1488:1492  2*32 */\n      0x40\n        /* \"contracts/ERC20Standard.sol\":1287:1288  4 */\n      0x04\n        /* \"contracts/ERC20Standard.sol\":1280:1284  size */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":1280:1288  size + 4 */\n      add\n        /* \"contracts/ERC20Standard.sol\":1261:1269  msg.data */\n      0x00\n      calldatasize\n        /* \"contracts/ERC20Standard.sol\":1261:1276  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/ERC20Standard.sol\":1261:1288  msg.data.length == size + 4 */\n      eq\n        /* \"contracts/ERC20Standard.sol\":1254:1289  assert(msg.data.length == size + 4) */\n      tag_72\n      jumpi\n      invalid\n    tag_72:\n        /* \"contracts/ERC20Standard.sol\":1534:1540  _value */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":1510:1518  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1510:1530  balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1519:1529  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":1510:1530  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":1510:1540  balances[msg.sender] >= _value */\n      lt\n      iszero\n        /* \"contracts/ERC20Standard.sol\":1510:1554  balances[msg.sender] >= _value && _value > 0 */\n      dup1\n      iszero\n      tag_74\n      jumpi\n      pop\n        /* \"contracts/ERC20Standard.sol\":1553:1554  0 */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1544:1550  _value */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":1544:1554  _value > 0 */\n      gt\n        /* \"contracts/ERC20Standard.sol\":1510:1554  balances[msg.sender] >= _value && _value > 0 */\n    tag_74:\n        /* \"contracts/ERC20Standard.sol\":1502:1555  require(balances[msg.sender] >= _value && _value > 0) */\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n        /* \"contracts/ERC20Standard.sol\":1586:1618  balances[msg.sender].sub(_value) */\n      tag_76\n        /* \"contracts/ERC20Standard.sol\":1611:1617  _value */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":1586:1594  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1586:1606  balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1595:1605  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":1586:1606  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":1586:1610  balances[msg.sender].sub */\n      tag_62\n      swap1\n        /* \"contracts/ERC20Standard.sol\":1586:1618  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"contracts/ERC20Standard.sol\":1563:1571  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1563:1583  balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1572:1582  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":1563:1583  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":1563:1618  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Standard.sol\":1649:1681  balances[_recipient].add(_value) */\n      tag_77\n        /* \"contracts/ERC20Standard.sol\":1674:1680  _value */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":1649:1657  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1649:1669  balances[_recipient] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1658:1668  _recipient */\n      dup7\n        /* \"contracts/ERC20Standard.sol\":1649:1669  balances[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":1649:1673  balances[_recipient].add */\n      tag_60\n      swap1\n        /* \"contracts/ERC20Standard.sol\":1649:1681  balances[_recipient].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"contracts/ERC20Standard.sol\":1626:1634  balances */\n      0x05\n        /* \"contracts/ERC20Standard.sol\":1626:1646  balances[_recipient] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":1635:1645  _recipient */\n      dup6\n        /* \"contracts/ERC20Standard.sol\":1626:1646  balances[_recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":1626:1681  balances[_recipient] = balances[_recipient].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Standard.sol\":1715:1725  _recipient */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":1694:1734  Transfer(msg.sender, _recipient, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20Standard.sol\":1703:1713  msg.sender */\n      caller\n        /* \"contracts/ERC20Standard.sol\":1694:1734  Transfer(msg.sender, _recipient, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20Standard.sol\":1727:1733  _value */\n      dup5\n        /* \"contracts/ERC20Standard.sol\":1694:1734  Transfer(msg.sender, _recipient, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20Standard.sol\":1414:1754  function transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":2345:2475  function allowance(address _spender, address _owner) public view returns (uint balance) {\r... */\n    tag_50:\n        /* \"contracts/ERC20Standard.sol\":2419:2431  uint balance */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2445:2452  allowed */\n      0x06\n        /* \"contracts/ERC20Standard.sol\":2445:2460  allowed[_owner] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2453:2459  _owner */\n      dup4\n        /* \"contracts/ERC20Standard.sol\":2445:2460  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Standard.sol\":2445:2470  allowed[_owner][_spender] */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":2461:2469  _spender */\n      dup5\n        /* \"contracts/ERC20Standard.sol\":2445:2470  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Standard.sol\":2438:2470  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20Standard.sol\":2345:2475  function allowance(address _spender, address _owner) public view returns (uint balance) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":590:740  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_60:\n        /* \"contracts/ERC20Standard.sol\":648:655  uint256 */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":668:677  uint256 c */\n      dup1\n        /* \"contracts/ERC20Standard.sol\":684:685  b */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":680:681  a */\n      dup5\n        /* \"contracts/ERC20Standard.sol\":680:685  a + b */\n      add\n        /* \"contracts/ERC20Standard.sol\":668:685  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/ERC20Standard.sol\":709:710  a */\n      dup4\n        /* \"contracts/ERC20Standard.sol\":704:705  c */\n      dup2\n        /* \"contracts/ERC20Standard.sol\":704:710  c >= a */\n      lt\n      iszero\n        /* \"contracts/ERC20Standard.sol\":696:711  require(c >= a) */\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n        /* \"contracts/ERC20Standard.sol\":731:732  c */\n      dup1\n        /* \"contracts/ERC20Standard.sol\":724:732  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20Standard.sol\":590:740  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Standard.sol\":432:582  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_62:\n        /* \"contracts/ERC20Standard.sol\":490:497  uint256 */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":523:524  a */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":518:519  b */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":518:524  b <= a */\n      gt\n      iszero\n        /* \"contracts/ERC20Standard.sol\":510:525  require(b <= a) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"contracts/ERC20Standard.sol\":536:545  uint256 c */\n      0x00\n        /* \"contracts/ERC20Standard.sol\":552:553  b */\n      dup3\n        /* \"contracts/ERC20Standard.sol\":548:549  a */\n      dup5\n        /* \"contracts/ERC20Standard.sol\":548:553  a - b */\n      sub\n        /* \"contracts/ERC20Standard.sol\":536:553  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/ERC20Standard.sol\":573:574  c */\n      dup1\n        /* \"contracts/ERC20Standard.sol\":566:574  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20Standard.sol\":432:582  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820f07095a2f772a2f76d42d85a12147c9bb3884dae901562090f28e8308d045f0c64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610dea806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806354fd4d501161006657806354fd4d501461022457806370a08231146102a757806395d89b41146102ff578063a9059cbb14610382578063dd62ed3e146103d05761009e565b806306fdde03146100a3578063095ea7b31461012657806318160ddd1461017457806323b872dd14610192578063313ce56714610200575b600080fd5b6100ab610448565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101726004803603604081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104e6565b005b61017c6105d0565b6040518082815260200191505060405180910390f35b6101fe600480360360608110156101a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105d6565b005b610208610959565b604051808260ff1660ff16815260200191505060405180910390f35b61022c61096c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561026c578082015181840152602081019050610251565b50505050905090810190601f1680156102995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e9600480360360208110156102bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a0a565b6040518082815260200191505060405180910390f35b610307610a53565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034757808201518184015260208101905061032c565b50505050905090810190601f1680156103745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ce6004803603604081101561039857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610af1565b005b610432600480360360408110156103e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cef565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b505050505081565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35050565b60005481565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156106a1575080600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106ad5750600081115b6106b657600080fd5b61070881600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7690919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061079d81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d9590919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061086f81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d9590919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600260009054906101000a900460ff1681565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a025780601f106109d757610100808354040283529160200191610a02565b820191906000526020600020905b8154815290600101906020018083116109e557829003601f168201915b505050505081565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ae95780601f10610abe57610100808354040283529160200191610ae9565b820191906000526020600020905b815481529060010190602001808311610acc57829003601f168201915b505050505081565b604060048101600036905014610b0357fe5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610b525750600082115b610b5b57600080fd5b610bad82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d9590919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c4282600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7690919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610d8b57600080fd5b8091505092915050565b600082821115610da457600080fd5b60008284039050809150509291505056fea265627a7a72315820f07095a2f772a2f76d42d85a12147c9bb3884dae901562090f28e8308d045f0c64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDEA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D0 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x200 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x251 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x299 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x347 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x374 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x6A1 JUMPI POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x708 DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x79D DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x86F DUP2 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA02 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA02 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xAE9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP EQ PUSH2 0xB03 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBAD DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC42 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CREATE PUSH17 0x95A2F772A2F76D42D85A12147C9BB3884D 0xAE SWAP1 ISZERO PUSH3 0x90F28 0xE8 ADDRESS DUP14 DIV 0x5F 0xC PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "879:1955:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;879:1955:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806354fd4d501161006657806354fd4d501461022457806370a08231146102a757806395d89b41146102ff578063a9059cbb14610382578063dd62ed3e146103d05761009e565b806306fdde03146100a3578063095ea7b31461012657806318160ddd1461017457806323b872dd14610192578063313ce56714610200575b600080fd5b6100ab610448565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101726004803603604081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104e6565b005b61017c6105d0565b6040518082815260200191505060405180910390f35b6101fe600480360360608110156101a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105d6565b005b610208610959565b604051808260ff1660ff16815260200191505060405180910390f35b61022c61096c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561026c578082015181840152602081019050610251565b50505050905090810190601f1680156102995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e9600480360360208110156102bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a0a565b6040518082815260200191505060405180910390f35b610307610a53565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034757808201518184015260208101905061032c565b50505050905090810190601f1680156103745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ce6004803603604081101561039857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610af1565b005b610432600480360360408110156103e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cef565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b505050505081565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35050565b60005481565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156106a1575080600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106ad5750600081115b6106b657600080fd5b61070881600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7690919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061079d81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d9590919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061086f81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d9590919063ffffffff16565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600260009054906101000a900460ff1681565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a025780601f106109d757610100808354040283529160200191610a02565b820191906000526020600020905b8154815290600101906020018083116109e557829003601f168201915b505050505081565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ae95780601f10610abe57610100808354040283529160200191610ae9565b820191906000526020600020905b815481529060010190602001808311610acc57829003601f168201915b505050505081565b604060048101600036905014610b0357fe5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610b525750600082115b610b5b57600080fd5b610bad82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d9590919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c4282600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7690919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3505050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610d8b57600080fd5b8091505092915050565b600082821115610da457600080fd5b60008284039050809150509291505056fea265627a7a72315820f07095a2f772a2f76d42d85a12147c9bb3884dae901562090f28e8308d045f0c64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D0 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x200 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x251 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x299 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x347 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x32C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x374 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x6A1 JUMPI POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x708 DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x79D DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x86F DUP2 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA02 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA02 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xAE9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xACC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP EQ PUSH2 0xB03 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0xB5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBAD DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC42 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CREATE PUSH17 0x95A2F772A2F76D42D85A12147C9BB3884D 0xAE SWAP1 ISZERO PUSH3 0x90F28 0xE8 ADDRESS DUP14 DIV 0x5F 0xC PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "879:1955:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;879:1955:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;966:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;966:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2188:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;936:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1759:424;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1759:424:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;988:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1037;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1037:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1306:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1013:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1013:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:340;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1414:340:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2345:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2345:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;966:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2188:152::-;2281:6;2249:7;:19;2257:10;2249:19;;;;;;;;;;;;;;;:29;2269:8;2249:29;;;;;;;;;;;;;;;:38;;;;2318:8;2297:38;;2306:10;2297:38;;;2328:6;2297:38;;;;;;;;;;;;;;;;;;2188:152;;:::o;936:23::-;;;;:::o;1759:424::-;1864:6;1845:8;:15;1854:5;1845:15;;;;;;;;;;;;;;;;:25;;:65;;;;;1904:6;1874:7;:14;1882:5;1874:14;;;;;;;;;;;;;;;:26;1889:10;1874:26;;;;;;;;;;;;;;;;:36;;1845:65;:79;;;;;1923:1;1914:6;:10;1845:79;1837:88;;;;;;1956:25;1974:6;1956:8;:13;1965:3;1956:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1940:8;:13;1949:3;1940:13;;;;;;;;;;;;;;;:41;;;;2014:27;2034:6;2014:8;:15;2023:5;2014:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;1996:8;:15;2005:5;1996:15;;;;;;;;;;;;;;;:45;;;;2085:38;2116:6;2085:7;:14;2093:5;2085:14;;;;;;;;;;;;;;;:26;2100:10;2085:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;2056:7;:14;2064:5;2056:14;;;;;;;;;;;;;;;:26;2071:10;2056:26;;;;;;;;;;;;;;;:67;;;;2159:3;2143:28;;2152:5;2143:28;;;2164:6;2143:28;;;;;;;;;;;;;;;;;;1759:424;;;:::o;988:21::-;;;;;;;;;;;;;:::o;1037:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1306:103::-;1362:12;1388:8;:16;1397:6;1388:16;;;;;;;;;;;;;;;;1381:23;;1306:103;;;:::o;1013:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1414:340::-;1488:4;1287:1;1280:4;:8;1261;;:15;;:27;1254:35;;;;1534:6;1510:8;:20;1519:10;1510:20;;;;;;;;;;;;;;;;:30;;:44;;;;;1553:1;1544:6;:10;1510:44;1502:53;;;;;;1586:32;1611:6;1586:8;:20;1595:10;1586:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1563:8;:20;1572:10;1563:20;;;;;;;;;;;;;;;:55;;;;1649:32;1674:6;1649:8;:20;1658:10;1649:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1626:8;:20;1635:10;1626:20;;;;;;;;;;;;;;;:55;;;;1715:10;1694:40;;1703:10;1694:40;;;1727:6;1694:40;;;;;;;;;;;;;;;;;;1414:340;;;:::o;2345:130::-;2419:12;2445:7;:15;2453:6;2445:15;;;;;;;;;;;;;;;:25;2461:8;2445:25;;;;;;;;;;;;;;;;2438:32;;2345:130;;;;:::o;590:150::-;648:7;668:9;684:1;680;:5;668:17;;709:1;704;:6;;696:15;;;;;;731:1;724:8;;;590:150;;;;:::o;432:::-;490:7;523:1;518;:6;;510:15;;;;;;536:9;552:1;548;:5;536:17;;573:1;566:8;;;432:150;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "712400",
								"executionCost": "747",
								"totalCost": "713147"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22313",
								"balanceOf(address)": "1218",
								"decimals()": "1142",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"version()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 879,
									"end": 2834,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "MSTORE"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "POP"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "DUP1"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "CODECOPY"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 879,
									"end": 2834,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f07095a2f772a2f76d42d85a12147c9bb3884dae901562090f28e8308d045f0c64736f6c63430005110032",
									".code": [
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "MSTORE"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "POP"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "LT"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "SHR"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "54FD4D50"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "GT"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "54FD4D50"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMP"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPDEST"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "EQ"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPI"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "JUMPDEST"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "DUP1"
										},
										{
											"begin": 879,
											"end": 2834,
											"name": "REVERT"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "EXP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "NOT"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "RETURN"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "JUMPDEST"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "DUP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "DUP2"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "ADD"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "DUP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "DUP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "AND"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "ADD"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP3"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP2"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "DUP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "ADD"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP3"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP2"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "POP"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "POP"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "POP"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "JUMPDEST"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "STOP"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "MLOAD"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "DUP3"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "MSTORE"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "ADD"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "SWAP2"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "MLOAD"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "SWAP2"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "SUB"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "RETURN"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "JUMPDEST"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "DUP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "DUP2"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "ADD"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "DUP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "DUP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "AND"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "ADD"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP3"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP2"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "DUP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "AND"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "ADD"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP3"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP2"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "DUP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "ADD"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP3"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP2"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "JUMPDEST"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "STOP"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "JUMPDEST"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "JUMPDEST"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "MLOAD"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "DUP3"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "DUP2"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "MSTORE"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "ADD"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SWAP2"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "POP"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "POP"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "MLOAD"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SWAP2"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SUB"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SWAP1"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "RETURN"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ISZERO"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPI"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "EXP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "NOT"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "RETURN"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP2"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "ADD"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "AND"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "ADD"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP3"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP2"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "MLOAD"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP3"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP2"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "MSTORE"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "ADD"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP2"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "MLOAD"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP2"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SUB"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "RETURN"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP4"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP4"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ISZERO"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPI"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP4"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "EXP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "NOT"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "RETURN"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "JUMPDEST"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "DUP2"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "AND"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP3"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP2"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP3"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP2"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "JUMPDEST"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "STOP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "JUMPDEST"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP2"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "ADD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "AND"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "ADD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP3"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP2"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "AND"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "ADD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP3"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP2"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "JUMPDEST"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "MLOAD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP3"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP2"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "MSTORE"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "ADD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP2"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "MLOAD"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "DUP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP2"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SUB"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "RETURN"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MUL"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DIV"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DIV"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MUL"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MUL"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DIV"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "LT"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DIV"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MUL"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "KECCAK256"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SLOAD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP4"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "GT"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "AND"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "JUMPDEST"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "DUP1"
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2267,
											"name": "CALLER"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "AND"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "AND"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "DUP2"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "MSTORE"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "ADD"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "DUP2"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "MSTORE"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "ADD"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "KECCAK256"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2277,
											"name": "DUP5"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "AND"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "AND"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "DUP2"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "MSTORE"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "ADD"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "SWAP1"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "DUP2"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "MSTORE"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "ADD"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "KECCAK256"
										},
										{
											"begin": 2249,
											"end": 2287,
											"name": "DUP2"
										},
										{
											"begin": 2249,
											"end": 2287,
											"name": "SWAP1"
										},
										{
											"begin": 2249,
											"end": 2287,
											"name": "SSTORE"
										},
										{
											"begin": 2249,
											"end": 2287,
											"name": "POP"
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "DUP2"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2306,
											"end": 2316,
											"name": "CALLER"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "DUP4"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "MLOAD"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "DUP1"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "DUP3"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "DUP2"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "MSTORE"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "ADD"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "SWAP2"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "POP"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "POP"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "MLOAD"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "DUP1"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "SWAP2"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "SUB"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2297,
											"end": 2335,
											"name": "LOG3"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "POP"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "POP"
										},
										{
											"begin": 2188,
											"end": 2340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "SLOAD"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 936,
											"end": 959,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "JUMPDEST"
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1853,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1859,
											"name": "DUP6"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "AND"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "AND"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "KECCAK256"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "SLOAD"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "LT"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1910,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1910,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1910,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1845,
											"end": 1910,
											"name": "JUMPI"
										},
										{
											"begin": 1845,
											"end": 1910,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1"
										},
										{
											"begin": 1874,
											"end": 1881,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1887,
											"name": "DUP6"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "AND"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "AND"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "ADD"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "SWAP1"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "ADD"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1888,
											"name": "KECCAK256"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "CALLER"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "AND"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "AND"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "ADD"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "SWAP1"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "ADD"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "KECCAK256"
										},
										{
											"begin": 1874,
											"end": 1900,
											"name": "SLOAD"
										},
										{
											"begin": 1874,
											"end": 1910,
											"name": "LT"
										},
										{
											"begin": 1874,
											"end": 1910,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1910,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1845,
											"end": 1910,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "DUP2"
										},
										{
											"begin": 1914,
											"end": 1924,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1925,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1837,
											"end": 1925,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1925,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1925,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1925,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1837,
											"end": 1925,
											"name": "JUMPDEST"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP2"
										},
										{
											"begin": 1956,
											"end": 1964,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1968,
											"name": "DUP6"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "AND"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "AND"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "DUP2"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "MSTORE"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "ADD"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "SWAP1"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "DUP2"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "MSTORE"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "ADD"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "KECCAK256"
										},
										{
											"begin": 1956,
											"end": 1969,
											"name": "SLOAD"
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "SWAP1"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "SWAP2"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "SWAP1"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "AND"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1956,
											"end": 1981,
											"name": "JUMPDEST"
										},
										{
											"begin": 1940,
											"end": 1948,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP5"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "AND"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "AND"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "DUP2"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "MSTORE"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "ADD"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "SWAP1"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "DUP2"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "MSTORE"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "ADD"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "KECCAK256"
										},
										{
											"begin": 1940,
											"end": 1981,
											"name": "DUP2"
										},
										{
											"begin": 1940,
											"end": 1981,
											"name": "SWAP1"
										},
										{
											"begin": 1940,
											"end": 1981,
											"name": "SSTORE"
										},
										{
											"begin": 1940,
											"end": 1981,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP2"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP7"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "AND"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "AND"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "DUP2"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "MSTORE"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "ADD"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "DUP2"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "MSTORE"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "ADD"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "KECCAK256"
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "SLOAD"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "SWAP2"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "AND"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "JUMPDEST"
										},
										{
											"begin": 1996,
											"end": 2004,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP6"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "AND"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "AND"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "DUP2"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "MSTORE"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "ADD"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "SWAP1"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "DUP2"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "MSTORE"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "ADD"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2011,
											"name": "KECCAK256"
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "DUP2"
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP1"
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SSTORE"
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "POP"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2116,
											"end": 2122,
											"name": "DUP2"
										},
										{
											"begin": 2085,
											"end": 2092,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2098,
											"name": "DUP7"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "AND"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "AND"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "DUP2"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "MSTORE"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "ADD"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "SWAP1"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "DUP2"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "MSTORE"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "ADD"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "KECCAK256"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "CALLER"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "AND"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "AND"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "DUP2"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "MSTORE"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "ADD"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "SWAP1"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "DUP2"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "MSTORE"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "ADD"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "KECCAK256"
										},
										{
											"begin": 2085,
											"end": 2111,
											"name": "SLOAD"
										},
										{
											"begin": 2085,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2085,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "SWAP2"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "SWAP1"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "AND"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2085,
											"end": 2123,
											"name": "JUMPDEST"
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP6"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "AND"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "AND"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "DUP2"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "MSTORE"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "ADD"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "SWAP1"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "DUP2"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "MSTORE"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "ADD"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2070,
											"name": "KECCAK256"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "AND"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "AND"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "DUP2"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "MSTORE"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "ADD"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "SWAP1"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "DUP2"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "MSTORE"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "ADD"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "KECCAK256"
										},
										{
											"begin": 2056,
											"end": 2123,
											"name": "DUP2"
										},
										{
											"begin": 2056,
											"end": 2123,
											"name": "SWAP1"
										},
										{
											"begin": 2056,
											"end": 2123,
											"name": "SSTORE"
										},
										{
											"begin": 2056,
											"end": 2123,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2162,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "AND"
										},
										{
											"begin": 2152,
											"end": 2157,
											"name": "DUP4"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "AND"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2164,
											"end": 2170,
											"name": "DUP4"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "MLOAD"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "DUP1"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "DUP3"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "DUP2"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "MSTORE"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "ADD"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "SWAP2"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "POP"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "POP"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "MLOAD"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "DUP1"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "SWAP2"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "SUB"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "LOG3"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 1759,
											"end": 2183,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "JUMPDEST"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SWAP1"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SLOAD"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SWAP1"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "EXP"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "SWAP1"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "DIV"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "DUP2"
										},
										{
											"begin": 988,
											"end": 1009,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ISZERO"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MUL"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DIV"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DIV"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MUL"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ISZERO"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MUL"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DIV"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ISZERO"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPI"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "LT"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPI"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DIV"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MUL"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "KECCAK256"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SLOAD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "GT"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPI"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1403,
											"name": "DUP4"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "AND"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "AND"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "DUP2"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "MSTORE"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "ADD"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "SWAP1"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "DUP2"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "MSTORE"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "ADD"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "KECCAK256"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "SLOAD"
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP2"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1409,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ISZERO"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MUL"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MUL"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ISZERO"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MUL"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ISZERO"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPI"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "LT"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPI"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP4"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DIV"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MUL"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP4"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "KECCAK256"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SLOAD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP4"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "GT"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPI"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SUB"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP3"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "JUMPDEST"
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1284,
											"name": "DUP2"
										},
										{
											"begin": 1280,
											"end": 1288,
											"name": "ADD"
										},
										{
											"begin": 1261,
											"end": 1269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1269,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1261,
											"end": 1276,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1276,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 1254,
											"end": 1289,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1254,
											"end": 1289,
											"name": "JUMPI"
										},
										{
											"begin": 1254,
											"end": 1289,
											"name": "INVALID"
										},
										{
											"begin": 1254,
											"end": 1289,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1254,
											"end": 1289,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP2"
										},
										{
											"begin": 1510,
											"end": 1518,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "CALLER"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "AND"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "AND"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "KECCAK256"
										},
										{
											"begin": 1510,
											"end": 1530,
											"name": "SLOAD"
										},
										{
											"begin": 1510,
											"end": 1540,
											"name": "LT"
										},
										{
											"begin": 1510,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1510,
											"end": 1554,
											"name": "DUP1"
										},
										{
											"begin": 1510,
											"end": 1554,
											"name": "ISZERO"
										},
										{
											"begin": 1510,
											"end": 1554,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1510,
											"end": 1554,
											"name": "JUMPI"
										},
										{
											"begin": 1510,
											"end": 1554,
											"name": "POP"
										},
										{
											"begin": 1553,
											"end": 1554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP3"
										},
										{
											"begin": 1544,
											"end": 1554,
											"name": "GT"
										},
										{
											"begin": 1510,
											"end": 1554,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1510,
											"end": 1554,
											"name": "JUMPDEST"
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "JUMPI"
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "DUP1"
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "REVERT"
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "JUMPDEST"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1611,
											"end": 1617,
											"name": "DUP3"
										},
										{
											"begin": 1586,
											"end": 1594,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1605,
											"name": "CALLER"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "MSTORE"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "ADD"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "DUP2"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "MSTORE"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "ADD"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "KECCAK256"
										},
										{
											"begin": 1586,
											"end": 1606,
											"name": "SLOAD"
										},
										{
											"begin": 1586,
											"end": 1610,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1586,
											"end": 1610,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "SWAP2"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1586,
											"end": 1618,
											"name": "JUMPDEST"
										},
										{
											"begin": 1563,
											"end": 1571,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1582,
											"name": "CALLER"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "AND"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "DUP2"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "ADD"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "DUP2"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "MSTORE"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "ADD"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "KECCAK256"
										},
										{
											"begin": 1563,
											"end": 1618,
											"name": "DUP2"
										},
										{
											"begin": 1563,
											"end": 1618,
											"name": "SWAP1"
										},
										{
											"begin": 1563,
											"end": 1618,
											"name": "SSTORE"
										},
										{
											"begin": 1563,
											"end": 1618,
											"name": "POP"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP3"
										},
										{
											"begin": 1649,
											"end": 1657,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1668,
											"name": "DUP7"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "AND"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "AND"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "DUP2"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "MSTORE"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "DUP2"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "MSTORE"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "ADD"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "KECCAK256"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "SLOAD"
										},
										{
											"begin": 1649,
											"end": 1673,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1649,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "SWAP2"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "AND"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1626,
											"end": 1634,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1645,
											"name": "DUP6"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "AND"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "AND"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "DUP2"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "MSTORE"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "ADD"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "SWAP1"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "DUP2"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "MSTORE"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "ADD"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1646,
											"name": "KECCAK256"
										},
										{
											"begin": 1626,
											"end": 1681,
											"name": "DUP2"
										},
										{
											"begin": 1626,
											"end": 1681,
											"name": "SWAP1"
										},
										{
											"begin": 1626,
											"end": 1681,
											"name": "SSTORE"
										},
										{
											"begin": 1626,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "DUP3"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "AND"
										},
										{
											"begin": 1703,
											"end": 1713,
											"name": "CALLER"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "AND"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1727,
											"end": 1733,
											"name": "DUP5"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "MLOAD"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "DUP1"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "DUP3"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "DUP2"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "MSTORE"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "ADD"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "SWAP2"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "POP"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "POP"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "MLOAD"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "DUP1"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "SWAP2"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "SUB"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1734,
											"name": "LOG3"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1754,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "JUMPDEST"
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2452,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "AND"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "AND"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "DUP2"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "MSTORE"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "ADD"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "SWAP1"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "DUP2"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "MSTORE"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "ADD"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2460,
											"name": "KECCAK256"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2469,
											"name": "DUP5"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "AND"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "AND"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "DUP2"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "MSTORE"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "ADD"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "DUP2"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "MSTORE"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "ADD"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "KECCAK256"
										},
										{
											"begin": 2445,
											"end": 2470,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2470,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2470,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP3"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "SWAP2"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 740,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 590,
											"end": 740,
											"name": "JUMPDEST"
										},
										{
											"begin": 648,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 668,
											"end": 677,
											"name": "DUP1"
										},
										{
											"begin": 684,
											"end": 685,
											"name": "DUP3"
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP5"
										},
										{
											"begin": 680,
											"end": 685,
											"name": "ADD"
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1"
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP"
										},
										{
											"begin": 709,
											"end": 710,
											"name": "DUP4"
										},
										{
											"begin": 704,
											"end": 705,
											"name": "DUP2"
										},
										{
											"begin": 704,
											"end": 710,
											"name": "LT"
										},
										{
											"begin": 704,
											"end": 710,
											"name": "ISZERO"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "JUMPI"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "DUP1"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "REVERT"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 696,
											"end": 711,
											"name": "JUMPDEST"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "DUP1"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "SWAP2"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 740,
											"name": "SWAP3"
										},
										{
											"begin": 590,
											"end": 740,
											"name": "SWAP2"
										},
										{
											"begin": 590,
											"end": 740,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 740,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 740,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 432,
											"end": 582,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 432,
											"end": 582,
											"name": "JUMPDEST"
										},
										{
											"begin": 490,
											"end": 497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP3"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "DUP3"
										},
										{
											"begin": 518,
											"end": 524,
											"name": "GT"
										},
										{
											"begin": 518,
											"end": 524,
											"name": "ISZERO"
										},
										{
											"begin": 510,
											"end": 525,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 510,
											"end": 525,
											"name": "JUMPI"
										},
										{
											"begin": 510,
											"end": 525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 510,
											"end": 525,
											"name": "DUP1"
										},
										{
											"begin": 510,
											"end": 525,
											"name": "REVERT"
										},
										{
											"begin": 510,
											"end": 525,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 510,
											"end": 525,
											"name": "JUMPDEST"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 552,
											"end": 553,
											"name": "DUP3"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP5"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "SUB"
										},
										{
											"begin": 536,
											"end": 553,
											"name": "SWAP1"
										},
										{
											"begin": 536,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 566,
											"end": 574,
											"name": "SWAP2"
										},
										{
											"begin": 566,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 566,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 432,
											"end": 582,
											"name": "SWAP3"
										},
										{
											"begin": 432,
											"end": 582,
											"name": "SWAP2"
										},
										{
											"begin": 432,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 432,
											"end": 582,
											"name": "POP"
										},
										{
											"begin": 432,
											"end": 582,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Standard.sol\":\"ERC20Standard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20Standard.sol\":{\"keccak256\":\"0x2d33311be6b24988d2ba82df401cb40b8b5c4e69fdb11d46b071704540704081\",\"urls\":[\"bzz-raw://e54a532765171fca2013b2f261e822bcf069a634807a10224900614abce8ed5e\",\"dweb:/ipfs/QmRieNMPJa1wNu2gDjfFULj5sZqZWFnBCAKSkfUhcGx7J8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 132,
								"contract": "contracts/ERC20Standard.sol:ERC20Standard",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 134,
								"contract": "contracts/ERC20Standard.sol:ERC20Standard",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 136,
								"contract": "contracts/ERC20Standard.sol:ERC20Standard",
								"label": "decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							},
							{
								"astId": 138,
								"contract": "contracts/ERC20Standard.sol:ERC20Standard",
								"label": "symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/ERC20Standard.sol:ERC20Standard",
								"label": "version",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 144,
								"contract": "contracts/ERC20Standard.sol:ERC20Standard",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 150,
								"contract": "contracts/ERC20Standard.sol:ERC20Standard",
								"label": "allowed",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20Standard.sol\":27:875  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20Standard.sol\":27:875  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820f361488d205a7ddce7a171c0dcee20ebc48c16969c69292e805887295950bab964736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f361488d205a7ddce7a171c0dcee20ebc48c16969c69292e805887295950bab964736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 RETURN PUSH2 0x488D KECCAK256 GAS PUSH30 0xDCE7A171C0DCEE20EBC48C16969C69292E805887295950BAB964736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:848:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f361488d205a7ddce7a171c0dcee20ebc48c16969c69292e805887295950bab964736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 RETURN PUSH2 0x488D KECCAK256 GAS PUSH30 0xDCE7A171C0DCEE20EBC48C16969C69292E805887295950BAB964736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:848:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 875,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 875,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f361488d205a7ddce7a171c0dcee20ebc48c16969c69292e805887295950bab964736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 875,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "ADDRESS"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 875,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Standard.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20Standard.sol\":{\"keccak256\":\"0x2d33311be6b24988d2ba82df401cb40b8b5c4e69fdb11d46b071704540704081\",\"urls\":[\"bzz-raw://e54a532765171fca2013b2f261e822bcf069a634807a10224900614abce8ed5e\",\"dweb:/ipfs/QmRieNMPJa1wNu2gDjfFULj5sZqZWFnBCAKSkfUhcGx7J8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20Standard.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20Standard.sol",
					"exportedSymbols": {
						"ERC20Standard": [
							368
						],
						"SafeMath": [
							127
						]
					},
					"id": 369,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "120:146:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "135:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "140:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "131:47:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "143:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "165:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "158:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 33,
														"src": "190:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "202:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "202:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "190:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "226:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "230:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "226:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "226:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															386,
															387
														],
														"referencedDeclaration": 386,
														"src": "218:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "218:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "218:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "257:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "250:8:0"
											}
										]
									},
									"documentation": null,
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "66:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "77:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "77:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "65:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "111:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "110:9:0"
									},
									"scope": 127,
									"src": "53:213:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "341:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 44,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "360:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "364:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "360:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															386,
															387
														],
														"referencedDeclaration": 386,
														"src": "352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "352:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "352:14:0"
											},
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 57,
														"src": "377:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "377:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 51,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "389:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 52,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "389:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "377:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "415:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 56,
												"nodeType": "Return",
												"src": "408:8:0"
											}
										]
									},
									"documentation": null,
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "298:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "286:22:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "332:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "331:9:0"
									},
									"scope": 127,
									"src": "274:150:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "499:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 68,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "518:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 69,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "523:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															386,
															387
														],
														"referencedDeclaration": 386,
														"src": "510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "510:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "510:15:0"
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "536:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 75,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "548:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 76,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "552:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "548:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "536:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 79,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "573:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 66,
												"id": 80,
												"nodeType": "Return",
												"src": "566:8:0"
											}
										]
									},
									"documentation": null,
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "456:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:22:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "490:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "489:9:0"
									},
									"scope": 127,
									"src": "432:150:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "657:83:0",
										"statements": [
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "668:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 91,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "680:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 94,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "668:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "704:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															386,
															387
														],
														"referencedDeclaration": 386,
														"src": "696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "696:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "696:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "731:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 90,
												"id": 104,
												"nodeType": "Return",
												"src": "724:8:0"
											}
										]
									},
									"documentation": null,
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "603:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "614:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "602:22:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "648:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "647:9:0"
									},
									"scope": 127,
									"src": "590:150:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "815:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "834:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "839:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															386,
															387
														],
														"referencedDeclaration": 386,
														"src": "826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "826:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "859:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 122,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "863:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "859:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 124,
												"nodeType": "Return",
												"src": "852:12:0"
											}
										]
									},
									"documentation": null,
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "761:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "772:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "760:22:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "806:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "805:9:0"
									},
									"scope": 127,
									"src": "748:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 369,
							"src": "27:848:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 368,
							"linearizedBaseContracts": [
								368
							],
							"name": "ERC20Standard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 130,
									"libraryName": {
										"contractScope": null,
										"id": 128,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 127,
										"src": "912:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$127",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "906:27:0",
									"typeName": {
										"id": 129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "925:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 132,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 368,
									"src": "936:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 131,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "936:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 134,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 368,
									"src": "966:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 133,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "966:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 136,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 368,
									"src": "988:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 135,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "988:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 138,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 368,
									"src": "1013:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1013:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 140,
									"name": "version",
									"nodeType": "VariableDeclaration",
									"scope": 368,
									"src": "1037:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1037:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 144,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 368,
									"src": "1065:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 143,
										"keyType": {
											"id": 141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1074:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1065:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1085:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 150,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 368,
									"src": "1106:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 149,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1115:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1106:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 148,
											"keyType": {
												"id": 146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1135:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1126:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 147,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1146:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1249:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 155,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "1261:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1261:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1261:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 158,
																	"name": "size",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1280:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "34",
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1287:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1280:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1261:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 154,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1254:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1254:35:0"
											},
											{
												"id": 164,
												"nodeType": "PlaceholderStatement",
												"src": "1294:1:0"
											}
										]
									},
									"documentation": null,
									"id": 166,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1238:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1237:11:0"
									},
									"src": "1213:87:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1376:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "1388:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 175,
													"indexExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1397:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1388:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 176,
												"nodeType": "Return",
												"src": "1381:23:0"
											}
										]
									},
									"documentation": null,
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1325:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1324:16:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1362:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1362:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1361:14:0"
									},
									"scope": 368,
									"src": "1306:103:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "1494:260:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 191,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "1510:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 194,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 192,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 383,
																			"src": "1519:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1519:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1510:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 195,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "1534:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1510:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 197,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "1544:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1553:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1544:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1510:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															386,
															387
														],
														"referencedDeclaration": 386,
														"src": "1502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1502:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "1502:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 203,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1563:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 206,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "1572:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1572:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1563:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 212,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1611:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 207,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1586:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 210,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 208,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "1595:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1595:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1586:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "1586:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1586:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1563:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1563:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 216,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1626:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 218,
														"indexExpression": {
															"argumentTypes": null,
															"id": 217,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1635:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1626:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 223,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1674:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 219,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1649:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 221,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 220,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "1658:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1649:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "1649:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1649:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1626:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1626:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 228,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "1703:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1703:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1715:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 231,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "1727:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1694:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "1689:45:0"
											}
										]
									},
									"documentation": null,
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1488:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1490:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "1488:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 188,
											"modifierName": {
												"argumentTypes": null,
												"id": 184,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 166,
												"src": "1472:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1472:21:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1432:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1452:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1452:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1431:33:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:0"
									},
									"scope": 368,
									"src": "1414:340:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1829:354:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 245,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 144,
																			"src": "1845:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 247,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 246,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1854:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1845:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 248,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "1864:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1845:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 250,
																				"name": "allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 150,
																				"src": "1874:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 252,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 251,
																				"name": "_from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 237,
																				"src": "1882:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1874:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 255,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 253,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 383,
																				"src": "1889:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1889:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1874:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 256,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "1904:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1874:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1845:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 259,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1914:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1923:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1914:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1845:79:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															386,
															387
														],
														"referencedDeclaration": 386,
														"src": "1837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1837:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 265,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1940:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 267,
														"indexExpression": {
															"argumentTypes": null,
															"id": 266,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "1949:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1940:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 272,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1974:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 268,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1956:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 270,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 269,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "1965:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1956:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "1956:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1956:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1940:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1940:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 276,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 278,
														"indexExpression": {
															"argumentTypes": null,
															"id": 277,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1996:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 283,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2034:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 279,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "2014:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 281,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 280,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "2023:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2014:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "2014:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1996:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "1996:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 287,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2056:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 291,
															"indexExpression": {
																"argumentTypes": null,
																"id": 288,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2064:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2056:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 292,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2071:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2071:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2056:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 300,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2116:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 293,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "2085:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 295,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 294,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "2093:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2085:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 298,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 296,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "2100:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2100:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2085:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "2085:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2085:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2056:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "2056:67:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 305,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2152:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 306,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2159:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 307,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2143:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "EmitStatement",
												"src": "2138:33:0"
											}
										]
									},
									"documentation": null,
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1781:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1796:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1809:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1780:41:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1829:0:0"
									},
									"scope": 368,
									"src": "1759:424:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2244:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 322,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "2257:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2257:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2249:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 323,
														"indexExpression": {
															"argumentTypes": null,
															"id": 321,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2269:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2249:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 324,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2249:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2249:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 328,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2306:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2306:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 330,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 331,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2328:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "EmitStatement",
												"src": "2292:43:0"
											}
										]
									},
									"documentation": null,
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2206:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2224:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2224:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2205:31:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:0"
									},
									"scope": 368,
									"src": "2188:152:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2433:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 344,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 346,
														"indexExpression": {
															"argumentTypes": null,
															"id": 345,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "2453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2445:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"argumentTypes": null,
														"id": 347,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2461:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2445:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "2438:32:0"
											}
										]
									},
									"documentation": null,
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2364:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2382:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:34:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2419:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2418:14:0"
									},
									"scope": 368,
									"src": "2345:130:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 359,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2578:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2604:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2628:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2628:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2573:71:0"
									},
									"src": "2559:86:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 367,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2758:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2785:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2814:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2753:77:0"
									},
									"src": "2739:92:0"
								}
							],
							"scope": 369,
							"src": "879:1955:0"
						}
					],
					"src": "0:2836:0"
				},
				"id": 0
			}
		}
	}
}